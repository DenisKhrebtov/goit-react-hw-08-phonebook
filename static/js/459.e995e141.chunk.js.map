{"version":3,"file":"static/js/459.e995e141.chunk.js","mappings":"0NAEaA,EAAUC,EAAAA,GAAAA,IAAH,qKAQPC,EAAQD,EAAAA,GAAAA,GAAH,iF,8BCRLE,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASA,SAASC,KAA5B,EACtBC,EAAe,SAAAH,GAAK,OAAIA,EAAMC,SAASG,MAAnB,EAEpBC,EAAkB,SAAAL,GAAK,OAAIA,EAAMC,SAASA,SAASK,SAA5B,EAEvBC,GAAwBC,EAAAA,EAAAA,IACnC,CAACT,EAAgBI,IACjB,SAACF,EAAUQ,GACT,IAAMC,EAAmBD,EAAcA,EAAYE,cAAgB,GAEnE,OAAOV,EAASG,QAAO,SAAAQ,GAAO,OAC5BA,EAAQC,KAAKF,cAAcG,SAASJ,EADR,GAG/B,ICbUK,EAAUlB,EAAAA,GAAAA,KAAH,uIAOPmB,EAAWnB,EAAAA,GAAAA,MAAH,0CAIRoB,EAAYpB,EAAAA,GAAAA,MAAH,qOAeTqB,EAAcrB,EAAAA,GAAAA,MAAH,qOAeXsB,EAAStB,EAAAA,GAAAA,OAAH,uK,SC/BZ,SAASuB,IACd,IAAMC,GAAWC,EAAAA,EAAAA,MACXrB,GAAWsB,EAAAA,EAAAA,IAAYxB,GAe7B,OACE,UAACgB,EAAD,CAASS,SAdU,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OACnB,EAAyBD,EAAKE,SAAtBhB,EAAR,EAAQA,KAAMiB,EAAd,EAAcA,OACd7B,EAAS8B,MACP,SAAAnB,GAAO,OAAIA,EAAQC,KAAKF,gBAAkBE,EAAKmB,MAAMrB,aAA9C,IAELsB,MAAM,GAAD,OAAIpB,EAAKmB,MAAT,4BACLX,GAASa,EAAAA,EAAAA,IAAW,CAAErB,KAAMA,EAAKmB,MAAOF,OAAQA,EAAOE,SAE3DL,EAAKQ,OACN,EAGC,WACE,UAACnB,EAAD,mBAEE,SAACC,EAAD,CACEmB,KAAK,OACLvB,KAAK,OACLwB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,UAACvB,EAAD,qBAEE,SAACE,EAAD,CACEkB,KAAK,MACLvB,KAAK,SACLwB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,SAACpB,EAAD,CAAQiB,KAAK,SAAb,2BAGL,C,2DCpDYI,EAAO3C,EAAAA,GAAAA,GAAH,6EAIJ4C,EAAc5C,EAAAA,GAAAA,EAAH,0CAIX6C,EAAgB7C,EAAAA,GAAAA,KAAH,8CAIb8C,EAAe9C,EAAAA,GAAAA,OAAH,+MAcZ+C,EAAa/C,EAAAA,GAAAA,OAAH,6M,UC1BVgD,GAAahD,EAAAA,GAAAA,KAAH,uIAOViD,GAAYjD,EAAAA,GAAAA,MAAH,0CAIToB,GAAYpB,EAAAA,GAAAA,MAAH,qOAeTqB,GAAcrB,EAAAA,GAAAA,MAAH,qOAeXkD,GAAUlD,EAAAA,GAAAA,OAAH,uKAUPmD,GAAWnD,EAAAA,GAAAA,IAAH,sSAeRoD,GAAQpD,EAAAA,GAAAA,IAAH,uJAQLqD,GAAcrD,EAAAA,GAAAA,OAAH,sBC5DXsD,GAAgB,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UACpD,GAAwBC,EAAAA,EAAAA,UAASF,GAAjC,eAAOzC,EAAP,KAAa4C,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAASD,GAArC,eAAOzB,EAAP,KAAe4B,EAAf,KACMrC,GAAWC,EAAAA,EAAAA,MAQjB,OACE,SAAC0B,GAAD,WACE,UAACC,GAAD,YACE,SAACC,GAAD,CAAad,KAAK,SAASuB,QAASP,EAApC,UACE,SAAC,MAAD,OAEF,UAACP,GAAD,CAAYrB,SAZG,SAAAoC,GACnBA,EAAElC,iBACFL,GAASwC,EAAAA,EAAAA,IAAY,CAAER,GAAAA,EAAIxC,KAAAA,EAAMiB,OAAAA,KACjCsB,GACD,EAQK,WACE,UAACN,GAAD,mBAEE,SAAC,GAAD,CACEgB,SAAU,SAAAF,GACRH,EAAQG,EAAEG,cAAc/B,MACzB,EACDI,KAAK,OACLvB,KAAK,OACLwB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRP,MAAOnB,QAGX,UAACiC,GAAD,qBAEE,SAAC,GAAD,CACEgB,SAAU,SAAAF,GACRF,EAAUE,EAAEG,cAAc/B,MAC3B,EACDI,KAAK,MACLvB,KAAK,SACLwB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRP,MAAOF,QAGX,SAACiB,GAAD,CAASX,KAAK,SAAd,iCAKT,ECrDY4B,GAAc,SAAC,GAA0B,IAAxBX,EAAuB,EAAvBA,GAAIxC,EAAmB,EAAnBA,KAAMiB,EAAa,EAAbA,OACtC,GAA4B0B,EAAAA,EAAAA,WAAS,GAArC,eAAOS,EAAP,KAAeC,EAAf,KACM7C,GAAWC,EAAAA,EAAAA,MAEX6C,EAAY,kBAAMD,GAAWD,EAAjB,EAClB,OACE,UAACzB,EAAD,YACE,UAACC,EAAD,WACG5B,EADH,MACU,SAAC6B,EAAD,UAAgBZ,QAE1B,SAACa,EAAD,CAAcP,KAAK,SAASuB,QAAS,kBAAMtC,GAAS+C,EAAAA,EAAAA,IAAcf,GAA7B,EAArC,qBAGA,SAACT,EAAD,CAAYR,KAAK,SAASuB,QAASQ,EAAnC,kBAGCF,IACC,SAACd,GAAD,CACEC,QAASe,EACTd,GAAIA,EACJC,QAASzC,EACT0C,UAAWzB,MAKpB,ECtCYuC,GAAOxE,EAAAA,GAAAA,GAAH,8HCIJyE,GAAc,WACzB,IAAMC,GAAkBhD,EAAAA,EAAAA,IAAYhB,GAEpC,OACE,SAAC8D,GAAD,UACGE,EAAgBC,KAAI,gBAAGnB,EAAH,EAAGA,GAAIxC,EAAP,EAAOA,KAAMiB,EAAb,EAAaA,OAAb,OACnB,SAACkC,GAAD,CAAsBnD,KAAMA,EAAMiB,OAAQA,EAAQuB,GAAIA,GAApCA,EADC,KAK1B,E,WCdYzD,GAAUC,EAAAA,GAAAA,IAAH,wKAUP4E,GAAQ5E,EAAAA,GAAAA,MAAH,6FAML6E,GAAQ7E,EAAAA,GAAAA,MAAH,4NCbL8E,GAAS,WACpB,IAAMvE,GAASmB,EAAAA,EAAAA,IAAYpB,GACrBkB,GAAWC,EAAAA,EAAAA,MAIjB,OACE,SAAC,GAAD,WACE,UAACmD,GAAD,oCAEE,SAACC,GAAD,CAAO7D,KAAK,SAASuB,KAAK,SAASJ,MAAO5B,EAAQ0D,SAPvC,SAAArC,GACfJ,GAASuD,EAAAA,GAAAA,GAAenD,EAAMG,OAAOI,OACtC,QASF,ECjBY6C,GAAchF,EAAAA,GAAAA,EAAH,6KCAXiF,GAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAAc,SAACF,GAAD,UAAcE,GAA5B,EC4BvB,GApBqB,WACnB,IAAMzE,GAAYiB,EAAAA,EAAAA,IAAYlB,GACxBgB,GAAWC,EAAAA,EAAAA,MAMjB,OAJA0D,EAAAA,EAAAA,YAAU,WACR3D,GAAS4D,EAAAA,EAAAA,MACV,GAAE,CAAC5D,KAGF,UAACzB,EAAD,YACE,SAACE,EAAD,yBACA,SAACsB,EAAD,KACA,SAACtB,EAAD,wBACA,SAAC6E,GAAD,IACCrE,IAAa,SAACwE,GAAD,CAASC,KAAM,0BAC7B,SAACT,GAAD,MAGL,C","sources":["pages/ContactsPage/ContactsPage.styled.js","redux/contacts/contactSelectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactEditor/ContactEditor.styled.js","components/ContactEditor/ContactEditor.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Message/Message.styled.js","components/Message/Message.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  border-radius: 3px;\n  width: 380px;\n  margin: 20px auto;\n  padding: 20px;\n  background: linear-gradient(to bottom right, blue, pink);\n`;\n\nexport const Title = styled.h2`\n  color: white;\n  text-align: center;\n  margin: 10px;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts.items;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectError = state => state.contacts.contacts.error;\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterValue) => {\n    const normilizedFilter = filterValue ? filterValue.toLowerCase() : '';\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normilizedFilter)\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const AddForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  align-items: center;\n  justify-content: center;\n`;\nexport const AddLabel = styled.label`\n  color: yellow;\n`;\n\nexport const InputName = styled.input`\n  padding-left: 5px;\n  border-radius: 3px;\n  margin-left: 15px;\n\n  height: 20px;\n  font-size: 18px;\n\n  :hover,\n  :focus {\n    transform: scale(1.1);\n    transition: transform linear 200ms;\n  }\n`;\n\nexport const InputNumber = styled.input`\n  padding-left: 5px;\n  border-radius: 3px;\n  margin-left: 15px;\n\n  height: 20px;\n  font-size: 18px;\n\n  :hover,\n  :focus {\n    transform: scale(1.1);\n    transition: transform linear 200ms;\n  }\n`;\n\nexport const AddBtn = styled.button`\n  align-self: center;\n  border-radius: 9px;\n  :hover,\n  :focus {\n    transform: scale(1.2);\n    transition: transform linear 200ms;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { selectContacts } from 'redux/contacts/contactSelectors';\n\nimport {\n  AddForm,\n  AddLabel,\n  InputName,\n  InputNumber,\n  AddBtn,\n} from './ContactForm.styled';\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const { name, number } = form.elements;\n    contacts.find(\n      contact => contact.name.toLowerCase() === name.value.toLowerCase()\n    )\n      ? alert(`${name.value} is already in contacts`)\n      : dispatch(addContact({ name: name.value, number: number.value }));\n\n    form.reset();\n  };\n\n  return (\n    <AddForm onSubmit={handleSubmit}>\n      <AddLabel>\n        Name\n        <InputName\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </AddLabel>\n      <AddLabel>\n        Number\n        <InputNumber\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </AddLabel>\n      <AddBtn type=\"submit\">Add contact</AddBtn>\n    </AddForm>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const ContactName = styled.p`\n  color: yellow;\n`;\n\nexport const ContactNumber = styled.span`\n  margin-left: 10px;\n`;\n\nexport const DeleteButton = styled.button`\n  border-radius: 15px;\n\n  height: 30px;\n  color: red;\n  margin-left: 10px;\n  :hover,\n  :focus {\n    background-color: red;\n    color: white;\n    transform: scale(1.1);\n  }\n`;\n\nexport const EditButton = styled.button`\n  border-radius: 15px;\n  height: 30px;\n  color: red;\n  margin-left: 10px;\n  :hover,\n  :focus {\n    background-color: red;\n    color: white;\n    transform: scale(1.1);\n  }\n`;\n","import styled from 'styled-components';\n\nexport const EditorForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  align-items: center;\n  justify-content: center;\n`;\nexport const EditLabel = styled.label`\n  color: yellow;\n`;\n\nexport const InputName = styled.input`\n  padding-left: 5px;\n  border-radius: 3px;\n  margin-left: 15px;\n\n  height: 20px;\n  font-size: 18px;\n\n  :hover,\n  :focus {\n    transform: scale(1.1);\n    transition: transform linear 200ms;\n  }\n`;\n\nexport const InputNumber = styled.input`\n  padding-left: 5px;\n  border-radius: 3px;\n  margin-left: 15px;\n\n  height: 20px;\n  font-size: 18px;\n\n  :hover,\n  :focus {\n    transform: scale(1.1);\n    transition: transform linear 200ms;\n  }\n`;\n\nexport const EditBtn = styled.button`\n  align-self: center;\n  border-radius: 9px;\n  :hover,\n  :focus {\n    transform: scale(1.2);\n    transition: transform linear 200ms;\n  }\n`;\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0px;\n  left: 0px;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  -webkit-box-pack: center;\n  justify-content: center;\n  -webkit-box-align: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.3);\n  z-index: 1200;\n`;\n\nexport const Modal = styled.div`\n  width: 300px;\n  padding: 40px;\n  background-color: rgba(0, 0, 0, 0.8);\n  border: 1px solid black;\n  position: relative;\n`;\n\nexport const CloseButton = styled.button``;\n","import { AiOutlineCloseCircle } from 'react-icons/ai';\nimport { useState } from 'react';\n\nimport {\n  Backdrop,\n  CloseButton,\n  Modal,\n  EditorForm,\n  EditLabel,\n  InputName,\n  InputNumber,\n  EditBtn,\n} from './ContactEditor.styled';\nimport { useDispatch } from 'react-redux';\nimport { editContact } from 'redux/contacts/contactsOperations';\n\nexport const ContactEditor = ({ onClose, id, oldName, oldNumber }) => {\n  const [name, setName] = useState(oldName);\n  const [number, setNumber] = useState(oldNumber);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(editContact({ id, name, number }));\n    onClose();\n  };\n\n  return (\n    <Backdrop>\n      <Modal>\n        <CloseButton type=\"button\" onClick={onClose}>\n          <AiOutlineCloseCircle />\n        </CloseButton>\n        <EditorForm onSubmit={handleSubmit}>\n          <EditLabel>\n            Name\n            <InputName\n              onChange={e => {\n                setName(e.currentTarget.value);\n              }}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              value={name}\n            />\n          </EditLabel>\n          <EditLabel>\n            Number\n            <InputNumber\n              onChange={e => {\n                setNumber(e.currentTarget.value);\n              }}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              value={number}\n            />\n          </EditLabel>\n          <EditBtn type=\"submit\">Edit contact</EditBtn>\n        </EditorForm>\n      </Modal>\n    </Backdrop>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\n\nimport {\n  ContactName,\n  EditButton,\n  ContactNumber,\n  DeleteButton,\n  Item,\n} from './ContactItem.styled';\nimport { ContactEditor } from 'components/ContactEditor/ContactEditor';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const openModal = () => setIsOpen(!isOpen);\n  return (\n    <Item>\n      <ContactName>\n        {name}: <ContactNumber>{number}</ContactNumber>\n      </ContactName>\n      <DeleteButton type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        Delete\n      </DeleteButton>\n      <EditButton type=\"button\" onClick={openModal}>\n        Edit\n      </EditButton>\n      {isOpen && (\n        <ContactEditor\n          onClose={openModal}\n          id={id}\n          oldName={name}\n          oldNumber={number}\n        />\n      )}\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  min-height: 200px;\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n  gap: 15px;\n`;\n","import { ContactItem } from 'components/ContactItem/ContactItem';\n\nimport { List } from 'components/ContactList/ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/contactSelectors';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {visibleContacts.map(({ id, name, number }) => (\n        <ContactItem key={id} name={name} number={number} id={id} />\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 0 10px;\n  border: 1px solid black;\n  border-radius: 50px;\n\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  color: tomato;\n\n  display: inline-block;\n  text-align: center;\n`;\nexport const Input = styled.input`\n  height: 20px;\n  font-size: 18px;\n  padding-left: 5px;\n  margin: 10px;\n  border-radius: 3px;\n  :hover,\n  :focus {\n    transform: scale(1.2);\n    transition: transform linear 200ms;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/contactsSlice';\nimport { selectFilter } from 'redux/contacts/contactSelectors';\nimport { Wrapper, Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const onChange = event => {\n    dispatch(filterContacts(event.target.value));\n  };\n  return (\n    <Wrapper>\n      <Label>\n        Find contacts by name\n        <Input name=\"filter\" type=\"filter\" value={filter} onChange={onChange} />\n      </Label>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MessageText = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n  font-family: monospace;\n  margin: 0 auto;\n  margin-top: 10px;\n  color: tomato;\n  text-align: center;\n`;\n","import { MessageText } from './Message.styled';\n\nexport const Message = ({ text }) => <MessageText>{text}</MessageText>;\n","import { Wrapper, Title } from './ContactsPage.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Message } from 'components/Message/Message';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { selectIsLoading } from 'redux/contacts/contactSelectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <Title>Contacts</Title>\n      <Filter />\n      {isLoading && <Message text={'Loading, pls wait...'} />}\n      <ContactList />\n    </Wrapper>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Wrapper","styled","Title","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectVisibleContacts","createSelector","filterValue","normilizedFilter","toLowerCase","contact","name","includes","AddForm","AddLabel","InputName","InputNumber","AddBtn","ContactForm","dispatch","useDispatch","useSelector","onSubmit","event","preventDefault","form","target","elements","number","find","value","alert","addContact","reset","type","pattern","title","required","Item","ContactName","ContactNumber","DeleteButton","EditButton","EditorForm","EditLabel","EditBtn","Backdrop","Modal","CloseButton","ContactEditor","onClose","id","oldName","oldNumber","useState","setName","setNumber","onClick","e","editContact","onChange","currentTarget","ContactItem","isOpen","setIsOpen","openModal","deleteContact","List","ContactList","visibleContacts","map","Label","Input","Filter","filterContacts","MessageText","Message","text","useEffect","fetchContacts"],"sourceRoot":""}